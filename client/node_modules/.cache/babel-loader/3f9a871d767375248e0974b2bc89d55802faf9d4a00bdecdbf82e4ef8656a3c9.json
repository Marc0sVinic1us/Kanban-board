{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCodes\\\\Kanban-board\\\\client\\\\src\\\\views\\\\components\\\\Board\\\\board.jsx\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"./board_style.css\";\nimport TaskCard from \"../TaksCard/taskcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board(props) {\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"props.boardName\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"article\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [props.taskCards !== null && props.taskCards !== undefined && Array.isArray(props.taskCards) ? props.taskCards.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n            index: index,\n            taskKey: task.key,\n            taskName: task.taskname,\n            taskDescription: task.taskdescription,\n            taskPriority: task.taskpriority,\n            setTriggerViewTask: setPopupTask,\n            setTaskDataView: setTaskDataView\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 41\n          }, this)) : \"\", provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Droppable","TaskCard","jsxDEV","_jsxDEV","Board","props","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","ref","innerRef","droppableProps","taskCards","undefined","Array","isArray","map","task","index","taskKey","key","taskName","taskname","taskDescription","taskdescription","taskPriority","taskpriority","setTriggerViewTask","setPopupTask","setTaskDataView","placeholder","_c","$RefreshReg$"],"sources":["C:/VSCodes/Kanban-board/client/src/views/components/Board/board.jsx"],"sourcesContent":["import { Droppable } from \"react-beautiful-dnd\"; \r\n\r\nimport \"./board_style.css\"\r\n\r\nimport TaskCard from \"../TaksCard/taskcard\";\r\n\r\nfunction Board(props) {\r\n\r\n    return (\r\n        <aside>\r\n            <h3>props.boardName</h3>\r\n            <section>\r\n                    <Droppable droppableId='todo'>\r\n                        {(provided) => (\r\n                            <article\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                { props.taskCards !== null && props.taskCards !== undefined && Array.isArray(props.taskCards) ? (\r\n                                \r\n                                    props.taskCards.map((task, index) => (                            \r\n                                        \r\n                                        <TaskCard \r\n                                            key={index}\r\n                                            index={index}\r\n                                            taskKey={task.key}\r\n                                            taskName={task.taskname}\r\n                                            taskDescription={task.taskdescription}\r\n                                            taskPriority={task.taskpriority}\r\n                                            setTriggerViewTask={setPopupTask}\r\n                                            setTaskDataView={setTaskDataView}\r\n                                        />\r\n                                        \r\n                                        ))\r\n                                    ) : \"\"\r\n                                }\r\n\r\n                                {provided.placeholder}\r\n                                </article>\r\n                            )\r\n                        }\r\n                    </Droppable>\r\n            </section>\r\n        </aside>\r\n\r\n    )\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,mBAAmB;AAE1B,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAElB,oBACIF,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBP,OAAA;MAAAG,QAAA,eACQH,OAAA,CAACH,SAAS;QAACW,WAAW,EAAC,MAAM;QAAAL,QAAA,EACvBM,QAAQ,iBACNT,OAAA;UACIU,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAAAT,QAAA,GAEzBD,KAAK,CAACW,SAAS,KAAK,IAAI,IAAIX,KAAK,CAACW,SAAS,KAAKC,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACd,KAAK,CAACW,SAAS,CAAC,GAEzFX,KAAK,CAACW,SAAS,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAE5BnB,OAAA,CAACF,QAAQ;YAELqB,KAAK,EAAEA,KAAM;YACbC,OAAO,EAAEF,IAAI,CAACG,GAAI;YAClBC,QAAQ,EAAEJ,IAAI,CAACK,QAAS;YACxBC,eAAe,EAAEN,IAAI,CAACO,eAAgB;YACtCC,YAAY,EAAER,IAAI,CAACS,YAAa;YAChCC,kBAAkB,EAAEC,YAAa;YACjCC,eAAe,EAAEA;UAAgB,GAP5BX,KAAK;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQb,CAEA,CAAC,GACF,EAAE,EAGTE,QAAQ,CAACsB,WAAW;QAAA;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGhB;AAACyB,EAAA,GAxCQ/B,KAAK;AA0Cd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}