{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCodes\\\\Kanban-board\\\\client\\\\src\\\\views\\\\components\\\\PasswordInput\\\\passwordInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\";\nimport \"./passwordInput_style.css\";\nimport eye_icon from \"../../../assets/svg/eye-icon.svg\";\nimport hiddenEye_icon from \"../../../assets/svg/hiddenEye-icon.svg\";\nimport PasswordStrenghtMeter from \"../PasswordStrenghtMeter/PasswordStrenghtMeter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordInput({\n  id,\n  state,\n  onChange,\n  showRegexError,\n  setResultRegex\n}) {\n  _s();\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const validatePassword = password => {\n    // Expressão regular para garantir que a senha seja forte\n    const strongPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{8,})/;\n    if (password && showRegexError) {\n      if (strongPasswordRegex.test(password)) {\n        setResultRegex(true);\n        return true;\n      } else {\n        setResultRegex(false);\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n  const passwordCorrect = validatePassword(state);\n  const changePasswordColor = () => ({\n    width: '70%',\n    background: 'red',\n    height: '7px',\n    borderRadius: '30px',\n    marginTop: '3px'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputPassword-bodyContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputPassword-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        id: id,\n        className: \"passwordInput\",\n        onChange: e => onChange(e.target.value),\n        value: state,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"eye-icon\",\n        src: isPasswordVisible ? hiddenEye_icon : eye_icon,\n        alt: \"eye-icon\",\n        onClick: handleTogglePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), showRegexError ? /*#__PURE__*/_jsxDEV(PasswordStrenghtMeter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordInput, \"wYsEiMguRmS7UjsAYACQoivBljc=\");\n_c = PasswordInput;\nexport default PasswordInput;\nvar _c;\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","useState","zxcvbn","eye_icon","hiddenEye_icon","PasswordStrenghtMeter","jsxDEV","_jsxDEV","PasswordInput","id","state","onChange","showRegexError","setResultRegex","_s","isPasswordVisible","setIsPasswordVisible","validatePassword","password","strongPasswordRegex","test","handleTogglePassword","passwordCorrect","changePasswordColor","width","background","height","borderRadius","marginTop","className","children","type","e","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/VSCodes/Kanban-board/client/src/views/components/PasswordInput/passwordInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport zxcvbn from \"zxcvbn\"\r\n\r\nimport \"./passwordInput_style.css\";\r\n\r\nimport eye_icon from \"../../../assets/svg/eye-icon.svg\";\r\nimport hiddenEye_icon from \"../../../assets/svg/hiddenEye-icon.svg\";\r\nimport PasswordStrenghtMeter from \"../PasswordStrenghtMeter/PasswordStrenghtMeter\";\r\n\r\nfunction PasswordInput({ id, state, onChange, showRegexError, setResultRegex }) {\r\n  \r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  const validatePassword = (password) => {\r\n    \r\n    // Expressão regular para garantir que a senha seja forte\r\n    const strongPasswordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{8,})/;\r\n\r\n    if (password && showRegexError) {\r\n        if (strongPasswordRegex.test(password)) {\r\n            setResultRegex(true)\r\n            return true\r\n        \r\n        } else {\r\n            setResultRegex(false)\r\n            return false\r\n        }\r\n    } \r\n    return true\r\n  };\r\n\r\n  const handleTogglePassword = () => {\r\n    setIsPasswordVisible(!isPasswordVisible);\r\n  };\r\n\r\n  const passwordCorrect = validatePassword(state);\r\n\r\n\r\n\r\n  const changePasswordColor = () => ({\r\n    width: '70%',\r\n    background: 'red',\r\n    height: '7px',\r\n    borderRadius: '30px',\r\n    marginTop: '3px'\r\n  })\r\n\r\n  return (\r\n    <div className=\"inputPassword-bodyContainer\">\r\n\r\n        <div className=\"inputPassword-container\">\r\n\r\n        <input\r\n            type={isPasswordVisible ? \"text\" : \"password\"}\r\n            id={id}\r\n            className=\"passwordInput\"\r\n            onChange={(e) => onChange(e.target.value)}\r\n            value={state}\r\n            required\r\n            />\r\n        <img\r\n            className=\"eye-icon\"\r\n            src={isPasswordVisible ? hiddenEye_icon : eye_icon}\r\n            alt=\"eye-icon\"\r\n            onClick={handleTogglePassword}\r\n            />\r\n        </div>\r\n\r\n        { showRegexError ? (\r\n          <PasswordStrenghtMeter />\r\n        ) : \"\" }\r\n\r\n        {/* { !passwordCorrect && showRegexError ? (\r\n        \r\n            <div className=\"password-error\">\r\n                <strong>Senha fraca!</strong>\r\n                <ul>\r\n                  <li>Deve conter pelo menos 8 caracteres</li>\r\n                  <li>Incluindo letras maiúsculas e minúsculas</li>\r\n                  <li>Números</li>\r\n                  <li>Caracteres especiais</li>\r\n                </ul>\r\n            </div>\r\n            \r\n            ) : \"\" } */}\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,OAAO,2BAA2B;AAElC,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,qBAAqB,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,SAASC,aAAaA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,cAAc;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAE9E,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMgB,gBAAgB,GAAIC,QAAQ,IAAK;IAErC;IACA,MAAMC,mBAAmB,GAAG,0DAA0D;IAEtF,IAAID,QAAQ,IAAIN,cAAc,EAAE;MAC5B,IAAIO,mBAAmB,CAACC,IAAI,CAACF,QAAQ,CAAC,EAAE;QACpCL,cAAc,CAAC,IAAI,CAAC;QACpB,OAAO,IAAI;MAEf,CAAC,MAAM;QACHA,cAAc,CAAC,KAAK,CAAC;QACrB,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCL,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAED,MAAMO,eAAe,GAAGL,gBAAgB,CAACP,KAAK,CAAC;EAI/C,MAAMa,mBAAmB,GAAGA,CAAA,MAAO;IACjCC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,KAAK;IACjBC,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,oBACErB,OAAA;IAAKsB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAExCvB,OAAA;MAAKsB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBAExCvB,OAAA;QACIwB,IAAI,EAAEhB,iBAAiB,GAAG,MAAM,GAAG,UAAW;QAC9CN,EAAE,EAAEA,EAAG;QACPoB,SAAS,EAAC,eAAe;QACzBlB,QAAQ,EAAGqB,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1CA,KAAK,EAAExB,KAAM;QACbyB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNhC,OAAA;QACIsB,SAAS,EAAC,UAAU;QACpBW,GAAG,EAAEzB,iBAAiB,GAAGX,cAAc,GAAGD,QAAS;QACnDsC,GAAG,EAAC,UAAU;QACdC,OAAO,EAAErB;MAAqB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEJ3B,cAAc,gBACdL,OAAA,CAACF,qBAAqB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACvB,EAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBL,CAAC;AAEV;AAACzB,EAAA,CA/EQN,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAiFtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}