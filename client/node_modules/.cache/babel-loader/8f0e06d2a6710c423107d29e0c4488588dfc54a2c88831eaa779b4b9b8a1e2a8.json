{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCodes\\\\Kanban-board\\\\client\\\\src\\\\views\\\\components\\\\Board\\\\board.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"./board_style.css\";\nimport TaskCard from \"../TaksCard/taskcard\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board(props) {\n  _s();\n  const [boardTaskCards, setBoardsTaskCards] = useState([]);\n  useEffect(() => {\n    const filteredTasks = props.taskCards.filter(task => task.taskstatus === props.boardName);\n    setBoardsTaskCards(filteredTasks);\n  }, [props.boardName, props.taskCards]);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.boardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.boardName,\n        children: provided => /*#__PURE__*/_jsxDEV(\"article\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [boardTaskCards !== null && boardTaskCards !== undefined && Array.isArray(boardTaskCards) ? boardTaskCards.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n            index: index,\n            taskKey: task.key,\n            taskName: task.taskname,\n            taskDescription: task.taskdescription,\n            taskPriority: task.taskpriority,\n            taskStatus: task.taskstatus,\n            setTriggerViewTask: props.setPopupTask,\n            setTaskDataView: props.setTaskDataView\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, this)) : \"\", provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"z8fLzz4tyW64FQDuSBlfqqdP1cM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Droppable","TaskCard","useEffect","jsxDEV","_jsxDEV","Board","props","_s","boardTaskCards","setBoardsTaskCards","filteredTasks","taskCards","filter","task","taskstatus","boardName","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","ref","innerRef","droppableProps","undefined","Array","isArray","map","index","taskKey","key","taskName","taskname","taskDescription","taskdescription","taskPriority","taskpriority","taskStatus","setTriggerViewTask","setPopupTask","setTaskDataView","placeholder","_c","$RefreshReg$"],"sources":["C:/VSCodes/Kanban-board/client/src/views/components/Board/board.jsx"],"sourcesContent":["import { React, useState } from 'react'\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\"; \r\n\r\nimport \"./board_style.css\"\r\n\r\nimport TaskCard from \"../TaksCard/taskcard\";\r\nimport { useEffect } from 'react';\r\n\r\nfunction Board(props) {\r\n\r\n    const [ boardTaskCards, setBoardsTaskCards ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const filteredTasks = props.taskCards.filter((task) => task.taskstatus === props.boardName);\r\n        setBoardsTaskCards(filteredTasks);\r\n    }, [props.boardName, props.taskCards]);\r\n\r\n    return (\r\n        <aside>\r\n            <h3>{props.boardName}</h3>\r\n            <section>\r\n                <Droppable droppableId={props.boardName}>\r\n                    {(provided) => (\r\n                        <article\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            { boardTaskCards !== null && boardTaskCards !== undefined && Array.isArray(boardTaskCards) ? (\r\n                            \r\n                                boardTaskCards.map((task, index) => (                            \r\n                                    <TaskCard \r\n                                        key={index}\r\n                                        index={index}\r\n                                        taskKey={task.key}\r\n                                        taskName={task.taskname}\r\n                                        taskDescription={task.taskdescription}\r\n                                        taskPriority={task.taskpriority}\r\n                                        taskStatus={task.taskstatus}\r\n                                        setTriggerViewTask={props.setPopupTask}\r\n                                        setTaskDataView={props.setTaskDataView}\r\n                                    />    \r\n                                ))) : \"\"\r\n                            }\r\n\r\n                            {provided.placeholder}\r\n                            </article>\r\n                        )\r\n                    }\r\n                </Droppable>\r\n            </section>\r\n        </aside>\r\n\r\n    )\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,mBAAmB;AAE1B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM,CAAEC,cAAc,EAAEC,kBAAkB,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE3DG,SAAS,CAAC,MAAM;IACZ,MAAMQ,aAAa,GAAGJ,KAAK,CAACK,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,UAAU,KAAKR,KAAK,CAACS,SAAS,CAAC;IAC3FN,kBAAkB,CAACC,aAAa,CAAC;EACrC,CAAC,EAAE,CAACJ,KAAK,CAACS,SAAS,EAAET,KAAK,CAACK,SAAS,CAAC,CAAC;EAEtC,oBACIP,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAKV,KAAK,CAACS;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BhB,OAAA;MAAAY,QAAA,eACIZ,OAAA,CAACJ,SAAS;QAACqB,WAAW,EAAEf,KAAK,CAACS,SAAU;QAAAC,QAAA,EAClCM,QAAQ,iBACNlB,OAAA;UACImB,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAAAT,QAAA,GAEzBR,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKkB,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACpB,cAAc,CAAC,GAEtFA,cAAc,CAACqB,GAAG,CAAC,CAAChB,IAAI,EAAEiB,KAAK,kBAC3B1B,OAAA,CAACH,QAAQ;YAEL6B,KAAK,EAAEA,KAAM;YACbC,OAAO,EAAElB,IAAI,CAACmB,GAAI;YAClBC,QAAQ,EAAEpB,IAAI,CAACqB,QAAS;YACxBC,eAAe,EAAEtB,IAAI,CAACuB,eAAgB;YACtCC,YAAY,EAAExB,IAAI,CAACyB,YAAa;YAChCC,UAAU,EAAE1B,IAAI,CAACC,UAAW;YAC5B0B,kBAAkB,EAAElC,KAAK,CAACmC,YAAa;YACvCC,eAAe,EAAEpC,KAAK,CAACoC;UAAgB,GARlCZ,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACJ,CAAC,GAAI,EAAE,EAGXE,QAAQ,CAACqB,WAAW;QAAA;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGhB;AAACb,EAAA,CA7CQF,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AA+Cd,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}