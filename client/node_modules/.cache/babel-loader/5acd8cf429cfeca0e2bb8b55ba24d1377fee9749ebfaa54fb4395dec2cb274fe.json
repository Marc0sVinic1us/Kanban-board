{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCodes\\\\Kanban-board\\\\client\\\\src\\\\views\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"./board_style.css\";\nimport TaskCard from \"../TaksCard/taskcard\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board(props) {\n  _s();\n  const [boardTaskCards, setBoardsTaskCards] = useState([]);\n  useEffect(() => {\n    props.taskCards.forEach(task => {\n      if (task.taskstatus === props.boardName) {\n        console.log(boardTaskCards);\n        setBoardsTaskCards(boardTaskCards.push(task));\n      }\n    });\n  }, [props.taskCards]);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.boardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: props.boardName,\n        children: provided => /*#__PURE__*/_jsxDEV(\"article\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [boardTaskCards !== null && boardTaskCards !== undefined && Array.isArray(boardTaskCards) ? boardTaskCards.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n            index: index,\n            taskKey: task.key,\n            taskName: task.taskname,\n            taskDescription: task.taskdescription,\n            taskPriority: task.taskpriority,\n            setTriggerViewTask: props.setPopupTask,\n            setTaskDataView: props.setTaskDataView\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 37\n          }, this)) : \"\", provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"z8fLzz4tyW64FQDuSBlfqqdP1cM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Droppable","TaskCard","useEffect","jsxDEV","_jsxDEV","Board","props","_s","boardTaskCards","setBoardsTaskCards","taskCards","forEach","task","taskstatus","boardName","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","ref","innerRef","droppableProps","undefined","Array","isArray","map","index","taskKey","key","taskName","taskname","taskDescription","taskdescription","taskPriority","taskpriority","setTriggerViewTask","setPopupTask","setTaskDataView","placeholder","_c","$RefreshReg$"],"sources":["C:/VSCodes/Kanban-board/client/src/views/components/Board/Board.jsx"],"sourcesContent":["import { React, useState } from 'react'\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\"; \r\n\r\nimport \"./board_style.css\"\r\n\r\nimport TaskCard from \"../TaksCard/taskcard\";\r\nimport { useEffect } from 'react';\r\n\r\nfunction Board(props) {\r\n\r\n    const [ boardTaskCards, setBoardsTaskCards ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        props.taskCards.forEach((task) => {\r\n\r\n            if (task.taskstatus === props.boardName) {\r\n                console.log(boardTaskCards)\r\n                setBoardsTaskCards(boardTaskCards.push(task));\r\n            }\r\n        });\r\n    }, [props.taskCards])\r\n\r\n    return (\r\n        <aside>\r\n            <h3>{props.boardName}</h3>\r\n            <section>\r\n                <Droppable droppableId={props.boardName}>\r\n                    {(provided) => (\r\n                        <article\r\n                            ref={provided.innerRef}\r\n                            {...provided.droppableProps}\r\n                        >\r\n                            { boardTaskCards !== null && boardTaskCards !== undefined && Array.isArray(boardTaskCards) ? (\r\n                            \r\n                                boardTaskCards.map((task, index) => (                            \r\n                                    <TaskCard \r\n                                        key={index}\r\n                                        index={index}\r\n                                        taskKey={task.key}\r\n                                        taskName={task.taskname}\r\n                                        taskDescription={task.taskdescription}\r\n                                        taskPriority={task.taskpriority}\r\n                                        setTriggerViewTask={props.setPopupTask}\r\n                                        setTaskDataView={props.setTaskDataView}\r\n                                    />    \r\n                                ))) : \"\"\r\n                            }\r\n\r\n                            {provided.placeholder}\r\n                            </article>\r\n                        )\r\n                    }\r\n                </Droppable>\r\n            </section>\r\n        </aside>\r\n\r\n    )\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,mBAAmB;AAE1B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM,CAAEC,cAAc,EAAEC,kBAAkB,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE3DG,SAAS,CAAC,MAAM;IACZI,KAAK,CAACI,SAAS,CAACC,OAAO,CAAEC,IAAI,IAAK;MAE9B,IAAIA,IAAI,CAACC,UAAU,KAAKP,KAAK,CAACQ,SAAS,EAAE;QACrCC,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC;QAC3BC,kBAAkB,CAACD,cAAc,CAACS,IAAI,CAACL,IAAI,CAAC,CAAC;MACjD;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,KAAK,CAACI,SAAS,CAAC,CAAC;EAErB,oBACIN,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAKZ,KAAK,CAACQ;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BlB,OAAA;MAAAc,QAAA,eACId,OAAA,CAACJ,SAAS;QAACuB,WAAW,EAAEjB,KAAK,CAACQ,SAAU;QAAAI,QAAA,EAClCM,QAAQ,iBACNpB,OAAA;UACIqB,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAAAT,QAAA,GAEzBV,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKoB,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACtB,cAAc,CAAC,GAEtFA,cAAc,CAACuB,GAAG,CAAC,CAACnB,IAAI,EAAEoB,KAAK,kBAC3B5B,OAAA,CAACH,QAAQ;YAEL+B,KAAK,EAAEA,KAAM;YACbC,OAAO,EAAErB,IAAI,CAACsB,GAAI;YAClBC,QAAQ,EAAEvB,IAAI,CAACwB,QAAS;YACxBC,eAAe,EAAEzB,IAAI,CAAC0B,eAAgB;YACtCC,YAAY,EAAE3B,IAAI,CAAC4B,YAAa;YAChCC,kBAAkB,EAAEnC,KAAK,CAACoC,YAAa;YACvCC,eAAe,EAAErC,KAAK,CAACqC;UAAgB,GAPlCX,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQb,CACJ,CAAC,GAAI,EAAE,EAGXE,QAAQ,CAACoB,WAAW;QAAA;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGhB;AAACf,EAAA,CAjDQF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}