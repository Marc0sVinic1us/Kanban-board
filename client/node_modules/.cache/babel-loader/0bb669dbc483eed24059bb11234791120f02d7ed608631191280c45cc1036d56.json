{"ast":null,"code":"var _jsxFileName = \"C:\\\\VSCodes\\\\Kanban-board\\\\client\\\\src\\\\views\\\\components\\\\Board\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"./board_style.css\";\nimport TaskCard from \"../TaksCard/taskcard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board(props) {\n  _s();\n  const [boardTaskCards, setBoardsTaskCards] = useState([]);\n  props.taskCards.map(task => {\n    if (task.status == props.boardName) {\n      const newTaskCards = [...boardTaskCards];\n      newTaskCards.push(task);\n      setBoardsTaskCards(newTaskCards);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.boardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"article\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [props.taskCards !== null && props.taskCards !== undefined && Array.isArray(props.taskCards) ? props.taskCards.map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n            index: index,\n            taskKey: task.key,\n            taskName: task.taskname,\n            taskDescription: task.taskdescription,\n            taskPriority: task.taskpriority,\n            setTriggerViewTask: props.setPopupTask,\n            setTaskDataView: props.setTaskDataView\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }, this)) : \"\", provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"TUuXXFyKarc3OZoPoHuPPXFpZ10=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Droppable","TaskCard","jsxDEV","_jsxDEV","Board","props","_s","boardTaskCards","setBoardsTaskCards","taskCards","map","task","status","boardName","newTaskCards","push","children","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","provided","ref","innerRef","droppableProps","undefined","Array","isArray","index","taskKey","key","taskName","taskname","taskDescription","taskdescription","taskPriority","taskpriority","setTriggerViewTask","setPopupTask","setTaskDataView","placeholder","_c","$RefreshReg$"],"sources":["C:/VSCodes/Kanban-board/client/src/views/components/Board/Board.jsx"],"sourcesContent":["import { React, useState } from 'react'\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\"; \r\n\r\nimport \"./board_style.css\"\r\n\r\nimport TaskCard from \"../TaksCard/taskcard\";\r\n\r\nfunction Board(props) {\r\n\r\n    const [ boardTaskCards, setBoardsTaskCards ] = useState([]);\r\n\r\n    props.taskCards.map((task) => {\r\n        if (task.status == props.boardName) {\r\n            const newTaskCards = [...boardTaskCards];\r\n            newTaskCards.push(task);\r\n            setBoardsTaskCards(newTaskCards);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <aside>\r\n            <h3>{props.boardName}</h3>\r\n            <section>\r\n                    <Droppable droppableId='todo'>\r\n                        {(provided) => (\r\n                            <article\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                            >\r\n                                { props.taskCards !== null && props.taskCards !== undefined && Array.isArray(props.taskCards) ? (\r\n                                \r\n                                    props.taskCards.map((task, index) => (                            \r\n                                        \r\n                                        <TaskCard \r\n                                            key={index}\r\n                                            index={index}\r\n                                            taskKey={task.key}\r\n                                            taskName={task.taskname}\r\n                                            taskDescription={task.taskdescription}\r\n                                            taskPriority={task.taskpriority}\r\n                                            setTriggerViewTask={props.setPopupTask}\r\n                                            setTaskDataView={props.setTaskDataView}\r\n                                        />\r\n                                        \r\n                                        ))\r\n                                    ) : \"\"\r\n                                }\r\n\r\n                                {provided.placeholder}\r\n                                </article>\r\n                            )\r\n                        }\r\n                    </Droppable>\r\n            </section>\r\n        </aside>\r\n\r\n    )\r\n}\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,mBAAmB;AAE1B,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM,CAAEC,cAAc,EAAEC,kBAAkB,CAAE,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE3DM,KAAK,CAACI,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;IAC1B,IAAIA,IAAI,CAACC,MAAM,IAAIP,KAAK,CAACQ,SAAS,EAAE;MAChC,MAAMC,YAAY,GAAG,CAAC,GAAGP,cAAc,CAAC;MACxCO,YAAY,CAACC,IAAI,CAACJ,IAAI,CAAC;MACvBH,kBAAkB,CAACM,YAAY,CAAC;IACpC;EACJ,CAAC,CAAC;EAEF,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAKX,KAAK,CAACQ;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1BjB,OAAA;MAAAa,QAAA,eACQb,OAAA,CAACH,SAAS;QAACqB,WAAW,EAAC,MAAM;QAAAL,QAAA,EACvBM,QAAQ,iBACNnB,OAAA;UACIoB,GAAG,EAAED,QAAQ,CAACE,QAAS;UAAA,GACnBF,QAAQ,CAACG,cAAc;UAAAT,QAAA,GAEzBX,KAAK,CAACI,SAAS,KAAK,IAAI,IAAIJ,KAAK,CAACI,SAAS,KAAKiB,SAAS,IAAIC,KAAK,CAACC,OAAO,CAACvB,KAAK,CAACI,SAAS,CAAC,GAEzFJ,KAAK,CAACI,SAAS,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEkB,KAAK,kBAE5B1B,OAAA,CAACF,QAAQ;YAEL4B,KAAK,EAAEA,KAAM;YACbC,OAAO,EAAEnB,IAAI,CAACoB,GAAI;YAClBC,QAAQ,EAAErB,IAAI,CAACsB,QAAS;YACxBC,eAAe,EAAEvB,IAAI,CAACwB,eAAgB;YACtCC,YAAY,EAAEzB,IAAI,CAAC0B,YAAa;YAChCC,kBAAkB,EAAEjC,KAAK,CAACkC,YAAa;YACvCC,eAAe,EAAEnC,KAAK,CAACmC;UAAgB,GAPlCX,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQb,CAEA,CAAC,GACF,EAAE,EAGTE,QAAQ,CAACmB,WAAW;QAAA;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MACZ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGhB;AAACd,EAAA,CAlDQF,KAAK;AAAAsC,EAAA,GAALtC,KAAK;AAoDd,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}